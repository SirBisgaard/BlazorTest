@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore


@if (IsFavorite)
{
    <div class="favorite-button favorite-button--active">
        <button @onclick="ToggleFavorite">
            <span>❤️</span>
        </button>
    </div>
}
else
{
    <div class="favorite-button">
        <button @onclick="ToggleFavorite">
            <span class="text-grey">❤️</span>
        </button>
    </div>
}


@code {
    private static readonly string FavoritesKey = "favorites";

    [Parameter] public Domain.Location? Location { get; set; }

    public bool IsFavorite { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var favorites = await ProtectedLocalStore.GetAsync<IEnumerable<string>>(FavoritesKey);
        if (favorites.Value is null)
        {
            return;
        }

        IsFavorite = favorites.Value.Contains(Location?.Name ?? "");
        StateHasChanged();
    }

    private async Task ToggleFavorite()
    {
        if (string.IsNullOrEmpty(Location?.Name))
        {
            return;
        }

        // TODO: Show Toaster! 🚀

        var favorites = await ProtectedLocalStore.GetAsync<IEnumerable<string>>(FavoritesKey);
        // If there are no favorites, then store the value and set the favorite to true
        if (favorites.Value is null)
        {
            await ProtectedLocalStore.SetAsync(FavoritesKey, new List<string> { Location!.Name });
            IsFavorite = true;
            return;
        }

        // If the location is already a favorite, remove it from the list
        if (favorites.Value.Contains(Location!.Name))
        {
            var newFavorites = favorites.Value.ToList();
            newFavorites.Remove(Location!.Name);
            await ProtectedLocalStore.SetAsync(FavoritesKey, newFavorites);
            IsFavorite = false;
        }
        // If the location is not a favorite, add it to the list
        else
        {
            var newFavorites = favorites.Value.ToList();
            newFavorites.Add(Location!.Name);
            await ProtectedLocalStore.SetAsync(FavoritesKey, newFavorites);
            IsFavorite = true;
        }
    }

}